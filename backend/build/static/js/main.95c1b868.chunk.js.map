{"version":3,"sources":["components/Loading/Loading.js","components/Employees/Employees.js","redux/actions/employee/employeeActions.js","assets/img/avatar.jpg","components/Employees/AddEmployee.js","components/Leave/Leaves.js","redux/actions/leave/leaveActions.js","assets/img/leave.jpg","components/Leave/AddLeave.js","components/Navbar/Navbar.js","redux/actions/users/usersActions.js","components/users/RegisterUser.js","components/ErrorMessage.js","components/users/LoginUser.js","assets/img/photob.jpg","components/Home/Home.js","components/Profile/Profile.js","components/Employees/UpdateEmployee.js","util/ProtectedRoute.js","App.js","redux/reducers/employees/createEmployeeReducer.js","redux/reducers/leaves/createLeaveReducer.js","redux/store/store.js","redux/reducers/employees/employeeListReducer.js","redux/reducers/leaves/leaveListReducer.js","redux/reducers/users/userAuthReducer.js","index.js","redux/actions/actionTypes.js"],"names":["Loading","Employees","history","dispatch","useDispatch","useEffect","a","type","FETCH_USERS_REQUEST","axios","get","data","FETCH_EMPLOYEE_SUCCESS","payload","FETCH_EMPLOYEE_FAIL","response","message","useSelector","state","employeesList","employees","loading","className","scope","map","employee","name","designation","experience","projects","onClick","id","_id","DELETE_EMPLOYEE_REQUEST","delete","DELETE_EMPLOYEE_SUCCESS","alert","window","location","reload","DELETE_EMPLOYEE_FAIL","style","color","cursor","push","AddEmployee","useState","setName","setDesignation","setExperience","setProjects","data-toggle","data-target","tabIndex","aria-labelledby","aria-hidden","data-dismiss","aria-label","src","avatar","alt","width","height","onSubmit","e","employeeData","CREATE_EMPLOYEE_REQUEST","post","CREATE_EMPLOYEE_SUCCESS","CREATE_EMPLOYEE_FAIL","action","value","onChange","target","aria-describedby","placeholder","required","labels","datasets","backgroundColor","borderColor","options","maintainAspectRatio","legend","fontSize","Leaves","FETCH_LEAVE_SUCCESS","FETCH_LEAVE_FAIL","leavesList","leaves","Date","leave","dateOne","dateTwo","DELETE_LEAVE_REQUEST","DELETE_LEAVE_SUCCESS","DELETE_LEAVE_FAIL","AddLeave","setType","setDateOne","setDateTwo","leaveData","CREATE_LEAVE_REQUEST","CREATE_LEAVE_SUCCESS","CREATE_LEAVE_FAIL","Navbar","props","userLogin","useHistory","userInfo","sessionStorage","getItem","parseUserInfo","JSON","parse","userAdmin","admin","href","aria-controls","aria-expanded","to","removeItem","USER_LOGOUT_SUCCESS","error","RegisterUser","email","setEmail","password","setpassword","setAdmin","preventDefault","USER_REGISTER_REQUEST","USER_REGISTER_FAIL","registerUserAction","htmlFor","ErrorMessage","children","background","padding","LoginUser","setPassword","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","userData","token","setItem","stringify","console","log","USER_LOGIN_FAIL","loginUserAction","Home","photob","Profile","rows","cols","form","label","borderWidth","scales","yAxes","ticks","beginAtZero","UpdateEmployee","useParams","employeedata","EMPLOYEE_UPDATE_REQUEST","put","EMPLOYEE_UPDATE_SUCCESS","EMPLOYEE_UPDATE_FAIL","updateEmployeesAction","ProtectedRoute","Component","component","restOfProps","userAuthData","render","App","exact","path","EmployeeDetail","require","middlewares","thunk","reducer","combineReducers","employeeCreated","FETCH_EMPLOYEE_REQUEST","leaveCreated","FETCH_LEAVE_REQUEST","USER_REGISTER_SUCCESS","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","document","getElementById","FETCH_USERS_SUCCESS","FETCH_USERS_FAIL","EMPLOYEE_DETAIL_REQUEST","EMPLOYEE_DETAIL_SUCCESS","EMPLOYEE_DETAIL_FAIL","LEAVE_DETAIL_REQUEST","LEAVE_DETAIL_SUCCESS","LEAVE_DETAIL_FAIL"],"mappings":"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","file":"static/js/main.95c1b868.chunk.js","sourcesContent":["  \nimport React from 'react';\n\nconst Loading = () => {\n  return (\n    <div>\n      <h1>Loading please wait......</h1>\n    </div>\n  );\n};\n\nexport default Loading;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchEmployeesAction, deleteEmployeesAction } from '../../redux/actions/employee/employeeActions';\nimport Loading from '../Loading/Loading';\n\n\nconst Employees = ({ history }) => {\n  const dispatch = useDispatch();\n//useeffect tells react to disatch action after render\n//called in employees allows access to the count state variable after the effect\n  useEffect(() => {\n    //dispatch fetchemployeeaction which reaches my API to get the employees\n    dispatch(fetchEmployeesAction());\n  }, [dispatch]);\n\n  //GRAB THE DATA FROM OUR STORE\n  //useselector is a hook to return the part of the state i want\n  //in this case, its the state of the employeelist from my store\n  const { employees, loading } = useSelector(state => {\n    return state.employeesList;\n  });\n\n\n  return (\n    <div>\n      <div className='row'>\n        <div className='col'>\n          <table className='table table-hover'>\n            <thead>\n\n              <tr>\n                <th scope='col'>Name</th>\n                <th scope='col'>Designation</th>\n                <th scope='col'>Experience</th>\n                <th scope='col'>Projects assigned</th>\n                <th scope='col'>Delete</th>\n                <th scope='col'>Edit</th>\n              </tr>\n            </thead>\n            <tbody>\n              {loading ? (\n                <Loading />\n              ) : (\n                <>\n                {/* map method creates a employees data with the */}\n                {/* this is a if statement, if there is employees state, map it to employee from our backend and return it onto this page */}\n                  {employees &&\n                    employees.map(employee => {\n                      return (\n\n                        <tr className='table-dark' key={employee._id}>\n                          <th scope='row'>{employee.name}</th>\n                          <td>{employee.designation}</td>\n                          <td>{employee.experience}</td>\n                          <td>{employee.projects}</td>\n\n                          <td>\n                            <i\n                              onClick={() => dispatch(deleteEmployeesAction(employee._id))}\n                              className='fas fa-trash '\n                              style={{\n                                color: 'red',\n                                cursor: 'progress',\n                              }}>\n                            </i>\n                          </td>\n                          <td>   \n                            <i  \n                            //history. push() is another approach where we make use of the history props React Router provides while rendering a component.\n                              className='far fa-edit'\n                              onClick= {() => history.push(`/UpdateEmployee/${employee._id}`)}\n                              style={{\n                                color: 'yellow',\n                                cursor: 'progress',\n                              }}\n                              >\n                            </i>\n                          </td>    \n                        </tr>\n                      );\n                    })}\n                </>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n     \n      </div>\n  );\n};\n\nexport default Employees;","//action tells reducer to manipulate the store data\nimport axios from 'axios';\nimport {\n  CREATE_EMPLOYEE_FAIL,\n  CREATE_EMPLOYEE_REQUEST,\n  CREATE_EMPLOYEE_SUCCESS,\n  FETCH_EMPLOYEE_FAIL,\n  FETCH_EMPLOYEE_SUCCESS,\n  FETCH_USERS_REQUEST,\n  DELETE_EMPLOYEE_REQUEST,\n  DELETE_EMPLOYEE_SUCCESS,\n  DELETE_EMPLOYEE_FAIL,\n  EMPLOYEE_UPDATE_REQUEST,\n  EMPLOYEE_UPDATE_SUCCESS,\n  EMPLOYEE_UPDATE_FAIL\n} from '../actionTypes';\n\n//create employeeaction \nconst createEmployeeAction = employeeData => {\n  return async dispatch => {\n    try {\n      //\n      dispatch({\n        type: CREATE_EMPLOYEE_REQUEST,\n      });\n      //pass in the employeedata keyed in and pass to post route dispatching the action\n\n      const { data } = await axios.post('/api/employees', employeeData);\n      dispatch({\n        type: CREATE_EMPLOYEE_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: CREATE_EMPLOYEE_FAIL,\n        payload: error.response && error.response.data.message,\n      });\n    }\n  };\n};\n\n//Fetch all EMPLOYEEs action\n//\nconst fetchEmployeesAction = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: FETCH_USERS_REQUEST,\n      });\n\n      const { data } = await axios.get('/api/employees');\n      dispatch({\n        type: FETCH_EMPLOYEE_SUCCESS,\n        payload: data,\n      });\n\n\n    } catch (error) {\n      dispatch({\n        type: FETCH_EMPLOYEE_FAIL,\n        payload: error.response && error.response.data.message,\n      });\n    }\n  };\n};\n\n\nconst updateEmployeesAction = (id, employeedata) => {\n  return async dispatch => {\n    try {\n\n\n      dispatch({\n        type: EMPLOYEE_UPDATE_REQUEST,\n      });\n\n      //pass in the employeedata keyed in and pass to put route dispatching the action\n\n      const { data } = await axios.put(`/api/employees/${id}`, employeedata);\n\n      dispatch({\n        type: EMPLOYEE_UPDATE_SUCCESS,\n        payload: data,\n      });\n      alert(\"Employee Updated\");\n\n    } catch (error) {\n\n      dispatch({\n        type: EMPLOYEE_UPDATE_FAIL,\n        payload: error.response && error.response.data.message,\n      });\n\n    }\n  };\n};\n\n\nconst deleteEmployeesAction = (id) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: DELETE_EMPLOYEE_REQUEST,\n      });\n\n      const { data } = await axios.delete(`/api/employees/${id}`);\n\n      dispatch({\n        type: DELETE_EMPLOYEE_SUCCESS,\n        payload: data,\n      });\n      alert(\"Employee removed\");\n      window.location.reload();\n    } catch (error) {\n      dispatch({\n        type: DELETE_EMPLOYEE_FAIL,\n        payload: error.response && error.response.data.message,\n      });\n    }\n  };\n};\n\nexport { createEmployeeAction, fetchEmployeesAction, updateEmployeesAction, deleteEmployeesAction }","export default __webpack_public_path__ + \"static/media/avatar.5c62f101.jpg\";","import React, { useState, } from 'react';\nimport {useDispatch} from 'react-redux';\nimport { createEmployeeAction } from '../../redux/actions/employee/employeeActions';\nimport avatar from '../../assets/img/avatar.jpg';\nimport {Pie} from 'react-chartjs-2';\nimport '../Profile/Profile.css';\n\nconst AddEmployee = () => {\n    const [name, setName] = useState('');\n    const [designation, setDesignation] = useState('');\n    const [experience, setExperience] = useState('');\n    const [projects, setProjects] = useState('');\n\n    //create dispatch function which is used to dispatch actions from the store\n    const dispatch = useDispatch();\n\n    //create submit form \n    const handleFormSubmit = e => {\n        // e.preventDefault();\n        //pass in data from the employee model\n        const data = {\n            name, designation, experience, projects\n        };\n        //dispatch createmployeeaction with the data\n        dispatch(createEmployeeAction(data));\n    };\n\n   \n    //bootstrap modal form template\n    return (\n        <div className='row container-height'>\n            <div className='col-lg-6 col-md-6 m-auto'>\n                <div className='container'>\n                    <button\n                        type='button'\n                        className='btn btn-primary'\n                        data-toggle='modal'\n                        data-target='#exampleModal'>\n                        Click to add Employee.\n                    </button>\n                    <div\n                        className='modal fade'\n                        id='exampleModal'\n                        tabIndex='-1'\n                        aria-labelledby='exampleModalLabel'\n                        aria-hidden='true'>\n                        <div className='modal-dialog'>\n                            <div className='modal-content'>\n                                <div className='modal-header'>\n                                    <h5 className='modal-title' id='exampleModalLabel'>\n                                        Add employee                        \n                                    </h5>\n                                    <button\n                                        type='button'\n                                        className='close'\n                                        data-dismiss='modal'\n                                        aria-label='Close'>\n                                        <span aria-hidden='true'>&times;</span>\n                                    </button>\n                                </div>\n                                <div>\n                                <img src={avatar} alt=\"employee face\" width=\"400\" height =\"300\"/> \n                                </div>\n                                <div className='modal-body'>\n                                    <form onSubmit={handleFormSubmit} action=\"/employees\">\n                                        <fieldset>\n                                            <div className='form-group'>\n                                                <input\n                                                    value={name}\n                                                    onChange={e => setName(e.target.value)}\n                                                    type='text'\n                                                    className='form-control'\n                                                    id='exampleInputEmail1'\n                                                    aria-describedby='emailHelp'\n                                                    placeholder='Employee name'\n                                                    required\n                                                />\n                                            </div>\n                                            <div className='form-group'>\n                                                <input\n                                                    value={designation}\n                                                    onChange={e => setDesignation(e.target.value)}\n                                                    type='text'\n                                                    className='form-control'\n                                                    id='exampleInputPassword1'\n                                                    placeholder='Employee Designation'\n                                                    required\n                                                />\n                                            </div>\n                                            <div className='form-group'>\n                                                <input\n                                                    value={experience}\n                                                    onChange={e => setExperience(e.target.value)}\n                                                    type='text'\n                                                    className='form-control'\n                                                    id='exampleInputPassword1'\n                                                    placeholder='Employee Experience'\n                                                    required\n                                                />\n                                            </div>\n                                            <div className='form-group'>\n                                                <input\n                                                    value={projects}\n                                                    onChange={e => setProjects(e.target.value)}\n                                                    type='text'\n                                                    className='form-control'\n                                                    id='exampleInputPassword1'\n                                                    placeholder='Projects assigned'\n                                                    required\n                                                />\n                                            </div>\n                                        \n                                            <button type='submit' className='btn btn-warning m-auto'>\n                                                Create Employee\n                                            </button>\n                                        </fieldset>\n                                    </form>\n                                </div>\n                                <div className='modal-footer'>\n                                    <button\n                                        type='button'\n                                        className='btn btn-danger'\n                                        data-dismiss='modal'>\n                                        Close\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <p>Overview of employees per division</p>\n            <div>\n                <Pie\n                    data={{\n                        labels: ['Hardware', 'Software', 'Finance', 'Projects', 'IT', 'Development'],\n                        datasets: [\n                            {\n                                data: [12, 19, 3, 5, 2, 3],\n                                backgroundColor: [\n                                    'rgba(255, 99, 132, 0.2)',\n                                    'rgba(54, 162, 235, 0.2)',\n                                    'rgba(255, 206, 86, 0.2)',\n                                    'rgba(75, 192, 192, 0.2)',\n                                    'rgba(153, 102, 255, 0.2)',\n                                    'rgba(255, 159, 64, 0.2)',\n\n                                ],\n                                borderColor: [\n                                    'rgba(255, 99, 132, 1)',\n                                    'rgba(54, 162, 235, 1)',\n                                    'rgba(255, 206, 86, 1)',\n                                    'rgba(75, 192, 192, 1)',\n                                    'rgba(153, 102, 255, 1)',\n                                    'rgba(255, 159, 64, 1)',\n\n                                ],\n                            },\n\n                        ],\n                    }}\n                    height={350}\n                    options={{\n                        maintainAspectRatio: false,\n                       \n                        legend: {\n                            labels: {\n                                fontSize: 10,\n                            },\n                        },\n                    }}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default AddEmployee;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchLeavesAction, deleteLeavesAction } from '../../redux/actions/leave/leaveActions';\nimport Loading from '../Loading/Loading';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport '../Profile/Profile.css';\n\n\nconst Leaves = ({ history }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    //dispatch action\n    dispatch(fetchLeavesAction());\n  }, [dispatch]);\n\n  //GRAB THE DATA FROM OUR STORE\n  const { leaves, loading } = useSelector(state => {\n    return state.leavesList;\n  });\n//for calendar\n  const [value, onChange] = useState(new Date());\n\n\n  return (\n    <div>\n      <div className='row'>\n        <div className='col'>\n          <table className='table table-hover'>\n            <thead>\n\n              <tr>\n              <th scope='col'>Name of employee</th>\n                <th scope='col'>Type of leave</th>\n                <th scope='col'>Start Date</th>\n                <th scope='col'>End Date</th>\n                <th scope='col'>Delete</th>\n              </tr>\n            </thead>\n            <tbody>\n              {loading ? (\n                <Loading />\n              ) : (\n                <>\n                  {leaves &&\n                    leaves.map(leave => {\n                      return (\n\n                        <tr className='table-dark' key={leave._id}>\n                          <th scope='row'>{leave.name}</th>\n                          <td>{leave.type}</td>\n                          <td>{leave.dateOne}</td>\n                          <td>{leave.dateTwo}</td>\n                          <td>\n                               <i\n                              onClick={() => dispatch(deleteLeavesAction(leave._id))}\n                              className='fas fa-trash '\n                              style={{\n                                color: 'red',\n                                cursor: 'progress',\n                              }}>\n                            </i> \n                          </td>\n                        </tr>\n                      );\n                    })}\n                </>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div>\n      <Calendar\n        onChange={onChange}\n        value={value}\n      />\n    </div>\n    </div>\n\n\n  );\n};\n\nexport default Leaves;","//action files describes what happened\nimport axios from 'axios';\nimport {\n  CREATE_LEAVE_FAIL,\n  CREATE_LEAVE_REQUEST,\n  CREATE_LEAVE_SUCCESS,\n  FETCH_LEAVE_FAIL,\n  FETCH_LEAVE_SUCCESS,\n  FETCH_USERS_REQUEST,\n  DELETE_LEAVE_REQUEST,\n  DELETE_LEAVE_SUCCESS,\n  DELETE_LEAVE_FAIL,\n} from '../actionTypes';\n\n\nconst createLeaveAction = leaveData => {\n  return async dispatch => {\n    try {\n\n      dispatch({\n        type: CREATE_LEAVE_REQUEST,\n      });\n     \n    \n      const { data } = await axios.post('/api/leaves', leaveData);\n\n      dispatch({\n        type: CREATE_LEAVE_SUCCESS,\n        payload: data,\n      });\n\n\n\n    } catch (error) {\n      dispatch({\n        type: CREATE_LEAVE_FAIL,\n        payload: error.response && error.response.data.message,\n      });\n\n    }\n  };\n};\n\n//Fetch all LEAVE action\n\nconst fetchLeavesAction = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: FETCH_USERS_REQUEST,\n      });\n\n      const { data } = await axios.get('/api/leaves');\n      dispatch({\n        type: FETCH_LEAVE_SUCCESS,\n        payload: data,\n      });\n\n\n    } catch (error) {\n      dispatch({\n        type: FETCH_LEAVE_FAIL,\n        payload: error.response && error.response.data.message,\n      });\n    }\n  };\n};\n\n\n\nconst deleteLeavesAction = (id) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: DELETE_LEAVE_REQUEST,\n      });\n\n      const { data } = await axios.delete(`/api/leaves/${id}`);\n\n      dispatch({\n        type: DELETE_LEAVE_SUCCESS,\n        payload: data,\n      });\n      alert(\"Leave removed\");\n      window.location.reload();\n    } catch (error) {\n      dispatch({\n        type: DELETE_LEAVE_FAIL,\n        payload: error.response && error.response.data.message,\n      });\n    }\n  };\n};\n\nexport { createLeaveAction, fetchLeavesAction, deleteLeavesAction }","export default __webpack_public_path__ + \"static/media/leave.719dbd91.jpg\";","import React, { useState } from 'react';\nimport {useDispatch} from 'react-redux';\nimport { createLeaveAction } from '../../redux/actions/leave/leaveActions';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport leave from '../../assets/img/leave.jpg';\n\nconst AddLeave = () => {\n    const [name, setName] = useState('');\n    const [type, setType] = useState('');\n    const [dateOne, setDateOne] = useState('');\n    const [dateTwo, setDateTwo] = useState('');\n//for calendar\n    const [value, onChange] = useState(new Date());\n\n    //create dispatch\n    const dispatch = useDispatch();\n\n    //Handle form submit\n    const handleFormSubmit = e => {\n        // e.preventDefault();\n\n        const data = {\n                name, type, dateOne, dateTwo     \n        };\n\n        dispatch(createLeaveAction(data));\n    };\n    \n    return (\n        <div className='row container-height'>\n            <div className='col-lg-6 col-md-6 m-auto'>\n                <div className='container'>\n                    <button\n                        type='button'\n                        className='btn btn-primary'\n                        data-toggle='modal'\n                        data-target='#exampleModal'>\n                        Click to add Leave\n                    </button>\n\n                    <div\n                        className='modal fade'\n                        id='exampleModal'\n                        tabIndex='-1'\n                        aria-labelledby='exampleModalLabel'\n                        aria-hidden='true'>\n                        <div className='modal-dialog'>\n                            <div className='modal-content'>\n                                <div className='modal-header'>\n                                    <h5 className='modal-title' id='exampleModalLabel'>\n                                        Have fun on your leave!                \n                                    </h5>\n                                    <button\n                                        type='button'\n                                        className='close'\n                                        data-dismiss='modal'\n                                        aria-label='Close'>\n                                        <span aria-hidden='true'>&times;</span>\n                                    </button>\n                                </div>\n                                <div>\n                                <img src={leave} alt=\"leave\" width=\"400\" height =\"300\"/> \n\n                                </div>\n                                <div className='modal-body'>\n                                    <form  onSubmit={handleFormSubmit} action=\"/leaves\">\n                                        <fieldset>\n                                        <div className='form-group'>\n                                                <input\n                                                    value={name}\n                                                    onChange={e => setName(e.target.value)}\n                                                    type='text'\n                                                    className='form-control'\n                                                    id='exampleInputEmail1'\n                                                    aria-describedby='emailHelp'\n                                                    placeholder='Name of employee'\n                                                    required\n                                                />\n                                            </div>\n                                            <div className='form-group'>\n                                                <input\n                                                    value={type}\n                                                    onChange={e => setType(e.target.value)}\n                                                    type='text'\n                                                    className='form-control'\n                                                    id='exampleInputEmail1'\n                                                    aria-describedby='emailHelp'\n                                                    placeholder='Type of leave'\n                                                    required\n                                                />\n                                            </div>\n                                            <div className='form-group'>\n                                                <input\n                                                    value={dateOne}\n                                                    onChange={e => setDateOne(e.target.value)}\n                                                    type='Date'\n                                                    className='form-control'\n                                                    id='exampleInputPassword1'\n                                                    placeholder='Start leave'\n                                                    required\n                                                />\n                                            </div>\n                                            <div className='form-group'>\n                                                <input\n                                                    value={dateTwo}\n                                                    onChange={e => setDateTwo(e.target.value)}\n                                                    type='Date'\n                                                    className='form-control'\n                                                    id='exampleInputPassword1'\n                                                    placeholder='End leave'\n                                                    required\n                                                />\n                                            </div>\n                                            \n                                        \n                                            <button type='submit' className='btn btn-warning m-auto'>\n                                                Create Leave\n                                            </button>\n                                        </fieldset>\n                                    </form>\n                                </div>\n                                <div className='modal-footer'>\n                                    <button\n                                        type='button'\n                                        className='btn btn-danger'\n                                        data-dismiss='modal'>\n                                        Close\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div>\n      <Calendar\n        onChange={onChange}\n        value={value}\n      />\n    </div>\n        </div>\n    );\n};\n\nexport default AddLeave;","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport {useSelector, useDispatch } from 'react-redux'\nimport { logoutUserAction } from '../../redux/actions/users/usersActions';\n\n\nconst Navbar = props => {\n//need this state to define state upon userlogin\n  const state = useSelector(state => \n    state.userLogin\n  );\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const logoutHandler = () => {\n    dispatch(logoutUserAction());\n    history.push('/');\n  }\n\n  const userInfo = sessionStorage.getItem('userAuthData');\n\n  const parseUserInfo = JSON.parse(userInfo);\n  // Question mark means optional chaining \n  // operational chaining returns a value of undefned if it does not exist\n  const userAdmin = parseUserInfo?.admin;\n\n\n  return (\n    <header>\n      <nav className='navbar navbar-expand-lg navbar-dark bg-dark'>\n        <a className='navbar-brand' href='/'>\n        </a>\n        <button\n          className='navbar-toggler'\n          type='button'\n          data-toggle='collapse'\n          data-target='#navbarColor01'\n          aria-controls='navbarColor01'\n          aria-expanded='false'\n          aria-label='Toggle navigation'>\n          <span className='navbar-toggler-icon'></span>\n        </button>\n\n        <div className='collapse navbar-collapse' id='navbarColor01'>\n          <ul className='navbar-nav m-auto'>\n           \n           \n           {!userInfo  ? (\n             <>\n              <li className='nav-item active'>\n              <Link className='nav-link' to='/'>\n                Home <span className='sr-only'>(current)</span>\n              </Link>\n            </li>\n            <li className='nav-item'>\n                <Link className='nav-link' to='/login'>\n                  Login\n                </Link>\n              </li>\n              <li className='nav-item'>\n                <Link className='nav-link' to='/register'>\n                  Register\n                </Link>\n              </li>\n             </>\n           ): (\n           <>\n            <li className='navbar-brand' >\n              Dashboard\n            </li>\n            <li className='nav-item'>\n                {/* Double exclamation mark returns a boolean value */}\n                {/* Question mark means optional chaining */}\n                {/* operational chaining returns a value of undefned if it does not exist*/}\n                <Link className='nav-link' to='/employees'>\n                  employees\n                </Link>\n              </li>\n              <li className='nav-item'>\n                {/* to access admin property if userinfo exist */}\n                {/* if userAdmin is true, show add employees page, !! returns it as true*/}\n                {!!userAdmin && <Link className='nav-link' to='/addemployee'>\n                  Add Employees\n                </Link>}\n              </li>\n\n              <li className='nav-item'>\n                <Link className='nav-link' to='/profile'>\n                  profile\n                </Link>\n              </li>\n              <li className='nav-item'>\n                <Link className='nav-link' to='/leaves'>\n                  View Leave\n                </Link>\n              </li>\n              <li className='nav-item'>\n              {!userAdmin && <Link className='nav-link' to='/Addleave'>\n                  Apply Leave\n                </Link>}\n              </li>\n             \n              <li className='nav-item'>\n                <Link onClick = {logoutHandler} className='nav-link' to='/login'>\n                  Logout\n                </Link>\n              </li>\n           </>\n           )}\n           <></>\n            </ul>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nexport default Navbar;","import axios from 'axios';\n// import { useDispatch, useSelector } from 'react-redux';\nimport {\n  USER_REGISTER_REQUEST,\n//   USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT_SUCCESS,\n} from '../actionTypes';\n\n\n//register user action\nconst registerUserAction = (name, email, password, admin) => {\n    return async dispatch => {\n        try {\n            dispatch({\n                type: USER_REGISTER_REQUEST,\n            });\n\n            //make actual call\n            // const config = {\n            //     headers: {\n            //         'Content-Type': 'application/json',\n            //     },\n            // };\n            //pass the user login info into post api backend\n            const { data } = await axios.post(\n                '/api/users/register',\n                {\n                    name,\n                    email,\n                    password,\n                    admin,\n                },\n            );\n                //if there is data, render to /route\n            if (data) window.location.href = '/';\n\n         \n        } catch (error) {\n            dispatch({\n                type: USER_REGISTER_FAIL,\n                payload: error.response && error.response.data.message,\n            });\n        }\n    };\n};\n\n//login action\n\nconst loginUserAction = (email, password) => {\n    return async dispatch => {\n        try {\n            dispatch({\n                type: USER_LOGIN_REQUEST,\n            });\n\n        \n            //axios holds 2 para, email and password\n            const { data } = await axios.post('/api/users/login', { email, password });\n            dispatch({\n                type: USER_LOGIN_SUCCESS,\n                payload: data,\n            });\n\n        //    userdata is define as token and admin to be pass in sessionStorage\n           const userData = {\n               token : data.token,\n               admin : data.admin,\n           }\n            //save the userdata into sessionStorage so that not all info will be present\n            sessionStorage.setItem('userAuthData', JSON.stringify(userData));\n\n\n        } catch (error) {\n            console.log(error.response)\n            dispatch({\n                type: USER_LOGIN_FAIL,\n                payload: error.response && error.response.data.message,\n            });\n\n        }\n    };\n};\n\n//logout\nconst logoutUserAction = () => async dispatch => {  \n    try {\n        //remove user from sessionStorage\n        sessionStorage.removeItem('userAuthData');\n\n        dispatch( {\n            type: USER_LOGOUT_SUCCESS,\n            \n        })\n    } catch (error) {\n\n    }\n};\n\n\nexport { registerUserAction, loginUserAction, logoutUserAction };","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { registerUserAction } from '../../redux/actions/users/usersActions';\n\nconst RegisterUser = ({history}) => {\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setpassword] = useState('');\n  const [admin, setAdmin] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const formSubmitHandler = e => {\n    e.preventDefault();\n    //dispatch action here\n    dispatch(registerUserAction(name, email, password, admin));\n    alert('User successfully created');\n  };\n  return (\n\n    <div className='row container-height'>\n      <div className='col-lg-6 col-md-6 m-auto'>\n        <div className='container'>\n\n          <h1>Welcome aboard</h1>\n          <form onSubmit={formSubmitHandler}>\n            <fieldset>\n              <div className='form-group'>\n                <label htmlFor='exampleInputEmail1'>Name</label>\n                <input\n                  value={name}\n                  onChange={e => setName(e.target.value)}\n                  type='text'\n                  className='form-control'\n                  id='exampleInputEmail1'\n                  aria-describedby='emailHelp'\n                  placeholder='Enter Name'\n                  required\n\n                />\n              </div>\n              <div className='form-group'>\n                <label htmlFor='exampleInputEmail1'>Email address</label>\n                <input\n                  value={email}\n                  onChange={e => setEmail(e.target.value)}\n                  type='email'\n                  className='form-control'\n                  id='exampleInputEmail1'\n                  aria-describedby='emailHelp'\n                  placeholder='Enter email'\n                  required\n\n                />\n              </div>\n              <div className='form-group'>\n                <label htmlFor='exampleInputPassword1'>Password</label>\n                <input\n                  value={password}\n                  onChange={e => setpassword(e.target.value)}\n                  type='password'\n                  className='form-control'\n                  id='exampleInputPassword1'\n                  placeholder='Password'\n                  required\n                />\n              </div>\n              <p></p>\n              <div className='form-group'>\n              <label htmlFor='exampleInputPassword1'> Manager </label>\n                <input\n                type=\"checkbox\"\n                onChange={e => setAdmin(!admin)}\n                />\n              </div>\n              <p></p>\n              <button type='submit' className='btn btn-info m-auto'>\n                Register\n              </button>\n            </fieldset>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterUser;","import React from 'react'\n\nconst ErrorMessage = ({ children }) => {\n    return (\n        <div style={{ background: 'red', color: 'white', padding: '3px' }}>\n            {children}\n        </div>\n    );\n};\n\nexport default ErrorMessage;","import React, { useEffect, useState, } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginUserAction } from '../../redux/actions/users/usersActions';\nimport ErrorMessage from '../ErrorMessage';\n\n\nconst LoginUser = ({ history }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  //grab pieces of data from our store that we want\n\n  const state = useSelector(state => {\n    return state.userLogin\n  })\n\n  const { error } = state;\n\n  const userInfo = sessionStorage.getItem('userAuthData')\n\n  //Submithandler\n  const loginUserSubmitHandler = e => {\n    e.preventDefault();\n    //dispatch is a redux method to allow state to be updated via an action(loginUserAction)\n    dispatch(loginUserAction(email, password));\n\n\n  };\n\n  //if userinfo is true in sessionStorage, push to profile\n  useEffect(() => {\n    if (userInfo) history.push('/profile');\n  }, [state]);\n\n\n  //if its loading, display loading text, when there is error, something went wrong is displayed\n  return (\n    <div className='row container-height'>\n      \n      <div className='col-lg-6 col-md-6 m-auto'>\n        <div className='container'>\n          {/* {loading && <h1>Loading</h1>} */}\n          {error && <ErrorMessage> {error}</ErrorMessage>}\n          <form onSubmit={loginUserSubmitHandler}>\n            <fieldset>\n              <div className='form-group'>\n                <p></p>\n                <label htmlFor='exampleInputEmail1'>Email address</label>\n                <input\n                  value={email}\n                  onChange={e => setEmail(e.target.value)}\n                  type='email'\n                  className='form-control'\n                  id='exampleInputEmail1'\n                  aria-describedby='emailHelp'\n                  placeholder='Enter email'\n                  required\n                />\n              </div>\n              <div className='form-group'>\n                <label htmlFor='exampleInputPassword1'>Password</label>\n                <input\n                  value={password}\n                  onChange={e => setPassword(e.target.value)}\n                  type='password'\n                  className='form-control'\n                  id='exampleInputPassword1'\n                  placeholder='Password'\n                  required\n                />\n              </div>\n              <button type='submit' className='btn btn-info m-auto'>\n                Login\n              </button>\n            </fieldset>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginUser;","export default __webpack_public_path__ + \"static/media/photob.6068ae1b.jpg\";","import React from 'react';\nimport './Home.css';\nimport photob from '../../assets/img/photob.jpg';\n//react-router-dom is used for routing purposes\nimport { Link } from 'react-router-dom';\nconst Home = () => {\n       \n    return (\n        <div className='Container'>\n            <img src={photob} alt='photob' width=\"1900\" height=\"850\"/> \n            <div className='Content'>\n                <div className='SubContent'>\n                    <h1>Work Admin System (WAS)</h1>\n                    <p>Increase productivity with ease</p>\n                    <button type='button' className='btn btn-outline-dark'>\n                        <Link to='/register'>Get started</Link>\n                    </button>\n                </div>\n            </div>\n        </div>\n  );\n};\n\nexport default Home;","import './Profile.css';\n\nimport React from 'react';\nimport {Bar} from 'react-chartjs-2';\nimport {Line} from 'react-chartjs-2';\n\n//chart\n\nconst Profile = ({ history }) => {\n  return (\n    <>\n      <div className='container'>\n        <div className='row'>\n          <div className='col mt-5'>\n            <div className='card m-auto ' style={{ width: '50%' }}>\n              <div className='card-body'>\n                <h5> Welcome </h5>\n                <textarea rows=\"4\" cols=\"50\" name=\"comment\" form=\"usrform\" placeholder={'task to do for today'}>\n                </textarea>\n                <p className='card-text'></p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n        <div className=\"info1\">\n        <h3>\n          Company mission</h3>\n        <p> Achieving work life balance </p>\n      </div>\n      <p></p>\n      <p></p>\n      <div>\n      <Bar\n        data={{\n          labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June'],\n          datasets: [\n            {\n              label: '# of sales per month',\n              data: [12, 19, 3, 5, 2, 3],\n              backgroundColor: [\n                'rgba(255, 99, 132, 0.2)',\n                'rgba(54, 162, 235, 0.2)',\n                'rgba(255, 206, 86, 0.2)',\n                'rgba(75, 192, 192, 0.2)',\n                'rgba(153, 102, 255, 0.2)',\n                'rgba(255, 159, 64, 0.2)',\n              ],\n              borderColor: [\n                'rgba(255, 99, 132, 1)',\n                'rgba(54, 162, 235, 1)',\n                'rgba(255, 206, 86, 1)',\n                'rgba(75, 192, 192, 1)',\n                'rgba(153, 102, 255, 1)',\n                'rgba(255, 159, 64, 1)',\n              ],\n              borderWidth: 1,\n            },\n\n          ],\n        }}\n        height={350}\n        width={1}\n        options={{\n          maintainAspectRatio: false,\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  beginAtZero: true,\n                },\n              },\n            ],\n          },\n          legend: {\n            labels: {\n              fontSize: 10,\n            },\n          },\n        }}\n      />\n    </div>\n    <div>\n      <Line\n        data={{\n          labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June'],\n          datasets: [\n            {\n              label: 'Customer Satisfaction',\n              data: [12, 19, 3, 5, 2, 3],\n              backgroundColor: [\n                'rgba(255, 99, 132, 0.2)',\n               \n              ],\n              borderColor: [\n                'rgba(255, 99, 132, 1)',\n               \n              ],\n              borderWidth: 1,\n            },\n\n          ],\n        }}\n        height={350}\n        width={1}\n        options={{\n          maintainAspectRatio: false,\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  beginAtZero: true,\n                },\n              },\n            ],\n          },\n          legend: {\n            labels: {\n              fontSize: 10,\n            },\n          },\n        }}\n      />\n    </div>\n     \n\n    </>\n    \n  );\n};\n\nexport default Profile;","import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch  } from 'react-redux';\nimport { updateEmployeesAction } from '../../redux/actions/employee/employeeActions';\n\nconst UpdateEmployee = ({ history }) => {\n  \n//useState is used as the states are only used for this component\n  const [name, setName] = useState('');\n  const [designation, setDesignation] = useState('');\n  const [experience, setExperience] = useState('');\n  const [projects, setProjects] = useState('');\n\n  const dispatch = useDispatch();\n\n  let {id} = useParams();\n// Need to pass this id into iupdateemployeeaction\n  const formSubmitHandler = e => {\n    // e.preventDefault();\n\n    const data = {\n      name,\n      designation,\n      experience,\n      projects,\n    };\n\n    //dispatch updateemployeesaction by pass through id and data\n    dispatch(updateEmployeesAction( id, data ));\n    //push it to employees page\n    history.push('/employees');\n    window.location.reload();\n  };\n\n\n  return (\n    <div className='row container-height'>\n      <div className='col-lg-6 col-md-6 m-auto'>\n        <div className='container'>\n          <button\n            type='button'\n            className='btn btn-primary'\n            data-toggle='modal'\n            data-target='#exampleModal'>\n            Edit this employee\n          </button>\n\n          <div\n            className='modal fade'\n            id='exampleModal'\n            tabIndex='-1'\n            aria-labelledby='exampleModalLabel'\n            aria-hidden='true'>\n            <div className='modal-dialog'>\n              <div className='modal-content'>\n                <div className='modal-header'>\n                  <h5 className='modal-title' id='exampleModalLabel'>\n                    Make sure employee data is confidential\n                  </h5>\n                  <button\n                    type='button'\n                    className='close'\n                    data-dismiss='modal'\n                    aria-label='Close'>\n                    <span aria-hidden='true'>&times;</span>\n                  </button>\n                </div>\n                <div className='modal-body'>\n                  <form onSubmit={formSubmitHandler} >\n                    <fieldset>\n                      <div className='form-group'>\n                        <input\n                          value={name}\n                          onChange={e => setName(e.target.value)}\n                          type='text'\n                          className='form-control'\n                          id='exampleInputEmail1'\n                          aria-describedby='emailHelp'\n                          placeholder='Employee name'\n                          required\n                        />\n                      </div>\n                      <div className='form-group'>\n                        <input\n                          value={designation}\n                          onChange={e => setDesignation(e.target.value)}\n                          type='text'\n                          className='form-control'\n                          id='exampleInputPassword1'\n                          placeholder='Employee Designation'\n                          required\n                        />\n                      </div>\n                      <div className='form-group'>\n                        <input\n                          value={experience}\n                          onChange={e => setExperience(e.target.value)}\n                          type='text'\n                          className='form-control'\n                          id='exampleInputPassword1'\n                          placeholder='Employee Experience'\n                          required\n                        />\n                      </div>\n                      <div className='form-group'>\n                        <input\n                          value={projects}\n                          onChange={e => setProjects(e.target.value)}\n                          type='text'\n                          className='form-control'\n                          id='exampleInputPassword1'\n                          placeholder='Projects assigned'\n                          required\n                        />\n                      </div>                   \n                      <button type='submit' className='btn btn-dark m-auto'>\n                        Update Employee\n                  </button>\n                    </fieldset>\n                  </form>\n                </div>\n                <div className='modal-footer'>\n                  <button\n                    type='button'\n                    className='btn btn-danger'\n                    data-dismiss='modal'>\n                    Close\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      </div>\n  );\n};\n\nexport default UpdateEmployee;","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\n//this function accepts component and other route details as props\n//component refers to component routes\n//restofprops refers to the rest of props that comes with the component\nfunction ProtectedRoute({ component: Component, ...restOfProps }) {\n  //get userauthdata from sessionStorage from login action\n  const userAuthData = sessionStorage.getItem(\"userAuthData\");\n\n  return (\n    <Route\n      {...restOfProps}\n      render={(props) =>\n        //if the value is true, render the component, else redirect route to / page\n        userAuthData ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n}\n\n\nexport default ProtectedRoute;","import './App.css';\nimport { BrowserRouter, Route, Switch, } from 'react-router-dom';\nimport Employees from './components/Employees/Employees';\nimport AddEmployee from './components/Employees/AddEmployee';\nimport Leaves from './components/Leave/Leaves';\nimport AddLeave from './components/Leave/AddLeave';\nimport Navbar from './components/Navbar/Navbar';\nimport RegisterUser from './components/users/RegisterUser';\nimport LoginUser from './components/users/LoginUser';\nimport Home from './components/Home/Home';\nimport Profile from './components/Profile/Profile';\nimport EmployeeDetail from './components/Employees/UpdateEmployee';\nimport UpdateEmployee from './components/Employees/UpdateEmployee';\nimport ProtectedRoute from './util/ProtectedRoute';\nimport React from 'react';\n\nfunction App() {\n  return (\n    <>\n    <BrowserRouter>\n      <Navbar />\n      <Switch>\n        <Route exact path='/' component={Home}  />\n        <Route exact path='/login' component={LoginUser}  />\n        <ProtectedRoute exact path='/profile' component={Profile} />\n        <Route exact path='/UpdateEmployee/:id' component={UpdateEmployee} />\n        <ProtectedRoute exact path='/employees' component={Employees}  />\n        <ProtectedRoute exact path='/addemployee' component={AddEmployee}  />\n        <ProtectedRoute exact path='/leaves' component={Leaves}  />\n        <ProtectedRoute exact path='/addleave' component={AddLeave}  />\n        <Route exact path='/register' component={RegisterUser}  />\n        <ProtectedRoute exact path='/employeedetail' component={EmployeeDetail} />\n      </Switch>\n    </BrowserRouter>\n     \n    </>\n  );\n}\n\n\nexport default App;","//Reducers are functions that take the current state and an action as arguments, and return a new state result. \n//In other words, (state, action) => newState.\n\nconst { CREATE_EMPLOYEE_REQUEST, CREATE_EMPLOYEE_SUCCESS, CREATE_EMPLOYEE_FAIL } = require(\"../../actions/actionTypes\");\n\nconst createEmployeeReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CREATE_EMPLOYEE_REQUEST:\n            return {\n                loading: false,\n            };\n            //if success, take the current state of employee and pass action payload to return a new state\n        case CREATE_EMPLOYEE_SUCCESS:\n            return {\n                employee: action.payload,\n            };\n            //if something goes wrong, return the error\n        case CREATE_EMPLOYEE_FAIL:\n            return {\n                loading: true,\n                error: action.payload,\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport { createEmployeeReducer };","//Reducers are functions that take the current state and an action as arguments, and return a new state result. \n//In other words, (state, action) => newState.\n\nconst { CREATE_LEAVE_REQUEST, CREATE_LEAVE_SUCCESS, CREATE_LEAVE_FAIL } = require(\"../../actions/actionTypes\");\n\nconst createLeaveReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CREATE_LEAVE_REQUEST:\n            return {\n                loading: false,\n            };\n            //IF SUCCESS, put property payload:data to LEAVE\n        case CREATE_LEAVE_SUCCESS:\n            return {\n                leave: action.payload,\n            };\n            //if something goes wrong, return the error\n        case CREATE_LEAVE_FAIL:\n            return {\n                loading: true,\n                error: action.payload,\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport { createLeaveReducer };","//redux store brings together state, actions and reduxers\n//store holds the state of our application\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\n//make use of async await inside our dispatch\nimport thunk from 'redux-thunk';\n//to visualise our state inside our browser\nimport { composeWithDevTools } from 'redux-devtools-extension';\n//import all the reducer created\nimport { createEmployeeReducer } from '../reducers/employees/createEmployeeReducer';\nimport { employeeListReducer } from '../reducers/employees/employeeListReducer';\nimport { userReducer } from '../reducers/users/userAuthReducer';\nimport { createLeaveReducer } from '../reducers/leaves/createLeaveReducer';\nimport { leaveListReducer } from '../reducers/leaves/leaveListReducer';\n\n//pass redux think middlewares to our store to allow me to write action creators that return a function instead of an action\nconst middlewares = [thunk];\n\n//we create a reducer which combines all the reducers from different parts of the app\nconst reducer = combineReducers({\n    employeeCreated: createEmployeeReducer,\n    employeesList: employeeListReducer,\n    leaveCreated: createLeaveReducer,\n    leavesList: leaveListReducer,\n    userLogin: userReducer, \n});\n\n\n//too create a store with reducer, state and composewithdevtools to allow us to apply many middlewares\n//create store is a redux core library API which will create the store, every store will have the reducer, initalstate and devtols\nconst store = createStore(\n    //reducer is the const which we defined earlier using combinereducer\n    reducer,\n    //include applymiddleware to apply middlewares\n    composeWithDevTools(applyMiddleware(...middlewares))\n  );\n  \n  \n  export { store };","import {\n    FETCH_EMPLOYEE_FAIL,\n    FETCH_EMPLOYEE_REQUEST,\n    FETCH_EMPLOYEE_SUCCESS,\n  } from '../../actions/actionTypes';\n  \n  const employeeListReducer = (state = [], action) => {\n    switch (action.type) {\n      case FETCH_EMPLOYEE_REQUEST:\n        return {\n          loading: true,\n        };\n      case FETCH_EMPLOYEE_SUCCESS:\n        return {\n          employees: action.payload,\n        };\n  \n      case FETCH_EMPLOYEE_FAIL:\n        return {\n          loading: false,\n          error: action.payload,\n        };\n  \n      default:\n        return state;\n    }\n  };\n  \n  export { employeeListReducer };","import {\n    FETCH_LEAVE_FAIL,\n    FETCH_LEAVE_REQUEST,\n    FETCH_LEAVE_SUCCESS,\n  } from '../../actions/actionTypes';\n  \n  const leaveListReducer = (state = [], action) => {\n    switch (action.type) {\n      case FETCH_LEAVE_REQUEST:\n        return {\n          loading: true,\n        };\n      case FETCH_LEAVE_SUCCESS:\n        return {\n          leaves: action.payload,\n        };\n  \n      case FETCH_LEAVE_FAIL:\n        return {\n          loading: false,\n          error: action.payload,\n        };\n  \n      default:\n        return state;\n    }\n  };\n  \n  export { leaveListReducer };","import {\n    USER_LOGIN_FAIL,\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGOUT_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n  \n  } from \"../../actions/actionTypes\";\n  \n  const userReducer = (state = {}, action) => {\n    switch (action.type) {\n      case USER_REGISTER_REQUEST:\n        return {\n          loading: true,\n        };\n      case USER_REGISTER_SUCCESS:\n        return {\n          userInfo: action.payload,\n        };\n  \n      case USER_REGISTER_FAIL:\n        return {\n          error: action.payload,\n          loading: false,\n        };\n  \n      //login\n      case USER_LOGIN_REQUEST:\n        return {\n          loading: true,\n        };\n  \n      case USER_LOGIN_SUCCESS:\n        return {\n          userInfo: action.payload,\n        };\n      case USER_LOGIN_FAIL:\n        return {\n          userInfo: action.payload,\n          loading: true,\n        };\n  \n      case USER_LOGOUT_SUCCESS:\n        return {};\n        \n      default:\n        return state;\n    }\n  };\n  \n  export { userReducer };","import React from 'react';\nimport ReactDOM from 'react-dom';\n//react redux package called provider to wrap our store with our provider\n//react-redux allows us to use react with redux\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/store/store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);","//USER REGISTRATION\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\n\n//USER LOGIN\nexport const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\n\n//USER LOGOUT\nexport const USER_LOGOUT_SUCCESS = 'USER_LOGOUT_SUCCESS';\n\n// FETCH USERS\nexport const FETCH_USERS_REQUEST = 'FETCH_USERS_REQUEST';\nexport const FETCH_USERS_SUCCESS = 'FETCH_USERS_SUCCESS';\nexport const FETCH_USERS_FAIL = 'CREATE_USERS_FAIL';\n\n//EMPLOYEES\n\nexport const CREATE_EMPLOYEE_REQUEST = 'CREATE_EMPLOYEE_REQUEST';\nexport const CREATE_EMPLOYEE_SUCCESS = 'CREATE_EMPLOYEE_SUCCESS';\nexport const CREATE_EMPLOYEE_FAIL = 'CREATE_EMPLOYEE_FAIL';\n\n// FETCH EMPLOYEES\nexport const FETCH_EMPLOYEE_REQUEST = 'FETCH_EMPLOYEE_REQUEST';\nexport const FETCH_EMPLOYEE_SUCCESS = 'FETCH_EMPLOYEE_SUCCESS';\nexport const FETCH_EMPLOYEE_FAIL = 'CREATE_EMPLOYEE_FAIL';\n\n//DELETE EMPLOYEES\nexport const DELETE_EMPLOYEE_REQUEST = 'DELETE_EMPLOYEE_REQUEST';\nexport const DELETE_EMPLOYEE_SUCCESS = 'DELETE_EMPLOYEE_SUCCESS';\nexport const DELETE_EMPLOYEE_FAIL = 'DELETE_EMPLOYEE_FAIL';\n\n//EMPLOYEE DETAILS\nexport const EMPLOYEE_DETAIL_REQUEST = 'EMPLOYEE_DETAIL_REQUEST';\nexport const EMPLOYEE_DETAIL_SUCCESS = 'EMPLOYEE_DETAIL_SUCCESS';\nexport const EMPLOYEE_DETAIL_FAIL = 'EMPLOYEE_DETAIL_FAIL';\n\n//UPDATE EMPLOYEES\nexport const EMPLOYEE_UPDATE_REQUEST = 'EMPLOYEE_UPDATE_REQUEST';\nexport const EMPLOYEE_UPDATE_SUCCESS = 'EMPLOYEE_UPDATE_SUCCESS';\nexport const EMPLOYEE_UPDATE_FAIL = 'EMPLOYEE_UPDATE_FAIL';\n\n\n\n//LEAVE\n\nexport const CREATE_LEAVE_REQUEST = 'CREATE_LEAVE_REQUEST';\nexport const CREATE_LEAVE_SUCCESS = 'CREATE_LEAVE_SUCCESS';\nexport const CREATE_LEAVE_FAIL = 'CREATE_LEAVE_FAIL';\n\n// FETCH LEAVE\nexport const FETCH_LEAVE_REQUEST = 'FETCH_LEAVE_REQUEST';\nexport const FETCH_LEAVE_SUCCESS = 'FETCH_LEAVE_SUCCESS';\nexport const FETCH_LEAVE_FAIL = 'CREATE_LEAVE_FAIL';\n\n//DELETE LEAVE\nexport const DELETE_LEAVE_REQUEST = 'DELETE_LEAVE_REQUEST';\nexport const DELETE_LEAVE_SUCCESS = 'DELETE_LEAVE_SUCCESS';\nexport const DELETE_LEAVE_FAIL = 'DELETE_LEAVE_FAIL';\n\n//LEAVE DETAILS\nexport const LEAVE_DETAIL_REQUEST = 'LEAVE_DETAIL_REQUEST';\nexport const LEAVE_DETAIL_SUCCESS = 'LEAVE_DETAIL_SUCCESS';\nexport const LEAVE_DETAIL_FAIL = 'LEAVE_DETAIL_FAIL';"],"sourceRoot":""}